.Dd March 13, 2024
.Dt libfwps 3
.Os libfwps
.Sh NAME
.Nm libfwps.h
.Nd Library to access the Windows Property Store format
.Sh SYNOPSIS
.In libfwps.h
.Pp
Support functions
.Ft const char *
.Fn libfwps_get_version "void"
.Pp
Notify functions
.Ft void
.Fn libfwps_notify_set_verbose "int verbose"
.Ft int
.Fn libfwps_notify_set_stream "FILE *stream" "libfwps_error_t **error"
.Ft int
.Fn libfwps_notify_stream_open "const char *filename" "libfwps_error_t **error"
.Ft int
.Fn libfwps_notify_stream_close "libfwps_error_t **error"
.Pp
Error functions
.Ft void
.Fn libfwps_error_free "libfwps_error_t **error"
.Ft int
.Fn libfwps_error_fprint "libfwps_error_t *error" "FILE *stream"
.Ft int
.Fn libfwps_error_sprint "libfwps_error_t *error" "char *string" "size_t size"
.Ft int
.Fn libfwps_error_backtrace_fprint "libfwps_error_t *error" "FILE *stream"
.Ft int
.Fn libfwps_error_backtrace_sprint "libfwps_error_t *error" "char *string" "size_t size"
.Pp
Format class identifier functions
.Ft const char *
.Fn libfwps_format_class_identifier_get_identifier "const uint8_t *format_class_identifier"
.Ft const char *
.Fn libfwps_format_class_identifier_get_description "const uint8_t *format_class_identifier"
.Pp
Record functions
.Ft int
.Fn libfwps_record_free "libfwps_record_t **record" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf8_entry_name_size "libfwps_record_t *record" "size_t *utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf8_entry_name "libfwps_record_t *record" "uint8_t *utf8_string" "size_t utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf16_entry_name_size "libfwps_record_t *record" "size_t *utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf16_entry_name "libfwps_record_t *record" "uint16_t *utf16_string" "size_t utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_entry_type "libfwps_record_t *record" "uint32_t *entry_type" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf8_value_name_size "libfwps_record_t *record" "size_t *utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf8_value_name "libfwps_record_t *record" "uint8_t *utf8_string" "size_t utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf16_value_name_size "libfwps_record_t *record" "size_t *utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_utf16_value_name "libfwps_record_t *record" "uint16_t *utf16_string" "size_t utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_value_type "libfwps_record_t *record" "uint32_t *value_type" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_size "libfwps_record_t *record" "size_t *data_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data "libfwps_record_t *record" "uint8_t *data" "size_t data_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_boolean "libfwps_record_t *record" "uint8_t *value_boolean" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_8bit_integer "libfwps_record_t *record" "uint8_t *value_8bit" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_16bit_integer "libfwps_record_t *record" "uint16_t *value_16bit" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_32bit_integer "libfwps_record_t *record" "uint32_t *value_32bit" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_64bit_integer "libfwps_record_t *record" "uint64_t *value_64bit" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_floatingtime "libfwps_record_t *record" "uint64_t *floatingtime" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_filetime "libfwps_record_t *record" "uint64_t *filetime" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_floating_point "libfwps_record_t *record" "double *value_floating_point" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf8_string_size "libfwps_record_t *record" "size_t *utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf8_string "libfwps_record_t *record" "uint8_t *utf8_string" "size_t utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf16_string_size "libfwps_record_t *record" "size_t *utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf16_string "libfwps_record_t *record" "uint16_t *utf16_string" "size_t utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf8_path_string_size "libfwps_record_t *record" "size_t *utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf8_path_string "libfwps_record_t *record" "uint8_t *utf8_string" "size_t utf8_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf16_path_string_size "libfwps_record_t *record" "size_t *utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_utf16_path_string "libfwps_record_t *record" "uint16_t *utf16_string" "size_t utf16_string_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_record_get_data_as_guid "libfwps_record_t *record" "uint8_t *guid_data" "size_t guid_data_size" "libfwps_error_t **error"
.Pp
Set functions
.Ft int
.Fn libfwps_set_initialize "libfwps_set_t **set" "libfwps_error_t **error"
.Ft int
.Fn libfwps_set_free "libfwps_set_t **set" "libfwps_error_t **error"
.Ft int
.Fn libfwps_set_copy_from_byte_stream "libfwps_set_t *set" "const uint8_t *byte_stream" "size_t byte_stream_size" "int ascii_codepage" "libfwps_error_t **error"
.Ft int
.Fn libfwps_set_get_identifier "libfwps_set_t *set" "uint8_t *guid_data" "size_t guid_data_size" "libfwps_error_t **error"
.Ft int
.Fn libfwps_set_get_number_of_records "libfwps_set_t *set" "int *number_of_records" "libfwps_error_t **error"
.Ft int
.Fn libfwps_set_get_record_by_index "libfwps_set_t *set" "int record_index" "libfwps_record_t **record" "libfwps_error_t **error"
.Pp
Store functions
.Ft int
.Fn libfwps_store_initialize "libfwps_store_t **store" "libfwps_error_t **error"
.Ft int
.Fn libfwps_store_free "libfwps_store_t **store" "libfwps_error_t **error"
.Ft int
.Fn libfwps_store_copy_from_byte_stream "libfwps_store_t *store" "const uint8_t *byte_stream" "size_t byte_stream_size" "int ascii_codepage" "libfwps_error_t **error"
.Ft int
.Fn libfwps_store_get_number_of_sets "libfwps_store_t *store" "int *number_of_sets" "libfwps_error_t **error"
.Ft int
.Fn libfwps_store_get_set_by_index "libfwps_store_t *store" "int set_index" "libfwps_set_t **set" "libfwps_error_t **error"
.Sh DESCRIPTION
The
.Fn libfwps_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or \-1 on error, dependent on the return type.
For the actual return values see "libfwps.h".
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind on the project issue tracker: https://github.com/libyal/libfwps/issues
.Sh AUTHOR
These man pages are generated from "libfwps.h".
.Sh COPYRIGHT
Copyright (C) 2013-2024, Joachim Metz <joachim.metz@gmail.com>.
.sp
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libfwps.h include file
